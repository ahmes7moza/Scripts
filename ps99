local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

local Window = Fluent:CreateWindow({
    Title = "PetSim99" .. Fluent.Version,
    SubTitle = "by dawid",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true, 
    Theme = "Darker",
    MinimizeKey = Enum.KeyCode.LeftControl 
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "box" })
}

Window:SelectTab(1)

local EventFarm = false
local TeleportFarm = false

local AntiAFK = false

Tabs.Main:AddToggle("AntiAFKToggle", {
    Title = "Anti-AFK",
    Description = "Prevents AFK kick",
    Default = false,
    Callback = function(Value)
        AntiAFK = Value
        if AntiAFK then
            spawn(function()
                while AntiAFK do
                    game:GetService("VirtualUser"):CaptureController()
                    game:GetService("VirtualUser"):ClickButton2(Vector2.new())

                    print("Anti-AFK activated!")

                    wait(30) -- Runs every 30 seconds
                end
            end)
        end
    end
})

-- Toggle for deleting blocks
local ToggleDelete = Tabs.Main:AddToggle("Event", { 
    Title = "Delete Blocks in Event",
    Description = "Automatically deletes blocks except those containing 'B'",
    Default = false,
    Callback = function(Value)
        EventFarm = Value
        if EventFarm then
            startAutoDelete()
        end
    end
})

-- Toggle for teleporting to the nearest 'B'
local ToggleTeleport = Tabs.Main:AddToggle("Teleport", { 
    Title = "Teleport to 'B'",
    Description = "Teleports to the nearest 'B' inside Blocks_1 to Blocks_8",
    Default = false,
    Callback = function(Value)
        TeleportFarm = Value
        if TeleportFarm then
            startTeleport()
        end
    end
})

-- Function to delete blocks except those containing 'B'
function startAutoDelete()
    spawn(function()
        while EventFarm do
            local parentFolder = workspace:FindFirstChild("__THINGS")
            and workspace.__THINGS:FindFirstChild("BlockWorlds")
            
            -- Loop through blocks 1 to 8
            for i = 1, 8 do
                local blockFolder = parentFolder:FindFirstChild("Blocks_" .. i)
                if blockFolder then
                    for _, obj in ipairs(blockFolder:GetChildren()) do
                        -- Check if this object has a descendant named "B"
                        local hasB = false
                        for _, descendant in ipairs(obj:GetDescendants()) do
                            if descendant:IsA("BasePart") and descendant.Name == "B" then
                                hasB = true
                                break
                            end
                        end
                        
                        -- If no "B" part is found, delete the object
                        if not hasB then
                            obj:Destroy()
                        end
                    end
                end
            end
            wait(0.1)
        end
    end)
end

-- Function to delete blocks within a 10-stud radius around the player, except those containing 'B'
function startAutoDelete()
    spawn(function()
        local player = game:GetService("Players").LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local rootPart = character:WaitForChild("HumanoidRootPart")
        local radius = 10  -- Radius for deletion

        while EventFarm do
            local parentFolder = workspace:FindFirstChild("__THINGS") and workspace.__THINGS:FindFirstChild("BlockWorlds")
            
            -- Loop through blocks 1 to 8
            for i = 1, 8 do
                local blockFolder = parentFolder:FindFirstChild("Blocks_" .. i)
                if blockFolder then
                    for _, obj in ipairs(blockFolder:GetChildren()) do
                        -- Check if this object has a descendant named "B"
                        local hasB = false
                        for _, descendant in ipairs(obj:GetDescendants()) do
                            if descendant:IsA("BasePart") and descendant.Name == "B" then
                                hasB = true
                                break
                            end
                        end
                        
                        -- If no "B" part is found and the block is within 10 studs, delete it
                        if not hasB then
                            local distance = (rootPart.Position - obj.PrimaryPart.Position).Magnitude
                            if distance <= radius then
                                obj:Destroy()
                            end
                        end
                    end
                end
            end
            wait(0.1)
        end
    end)
end
